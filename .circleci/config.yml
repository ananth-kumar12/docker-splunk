version: 2.1

executors:
  py3:
    docker:
      - image: cimg/python:3.7
  circleci_medium:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: medium
  circleci_xlarge:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: xlarge

jobs:

  build_debian_10:
    executor: py3
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace_cache
      - run:
          name: Build images
          command: make splunk-debian-10 uf-debian-10
      - run:
          name: Save images
          command: |
            docker save -o workspace_cache/splunk-debian-10.tar splunk-debian-10:latest
            docker save -o workspace_cache/uf-debian-10.tar uf-debian-10:latest
      - persist_to_workspace:
          root: workspace_cache
          paths:
            - splunk-debian-10.tar
            - uf-debian-10.tar

  build_redhat_8:
    executor: py3
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace_cache
      - run:
          name: Build images
          command: make splunk-redhat-8 uf-redhat-8
      - run:
          name: Save images
          command: |
            docker save -o workspace_cache/splunk-redhat-8.tar splunk-redhat-8:latest
            docker save -o workspace_cache/uf-redhat-8.tar uf-redhat-8:latest
      - persist_to_workspace:
          root: workspace_cache
          paths:
            - splunk-redhat-8.tar
            - uf-redhat-8.tar

  scan_images:
    executor: py3
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace_cache
      - run:
          name: Install trivy
          command: |
            VERSION=$(
                curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | \
                grep '"tag_name":' | \
                sed -E 's/.*"v([^"]+)".*/\1/'
            )
            wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
            tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
      - run:
          name: Scan images
          command: |
            ls
            for image in ./workspace_cache/*.tar; do
              echo "$image"
              [ -e "$image" ] || continue
              ./trivy --severity HIGH,CRITICAL --exit-code 1 --no-progress -f "$image"
            done

  test_redhat_8_small:
    executor: circleci_medium
    steps:
      - checkout
      - attach_workspace:
          at: workspace_cache
      - run:
          name: Setup python3
          command: |
            pyenv global 2.7.12 3.5.2
            python --version
            pip --version
            python3 --version
            pip3 --version
      - run:
          name: Load images
          command: |
            docker load -i workspace_cache/splunk-redhat-8.tar
            docker load -i workspace_cache/uf-redhat-8.tar
      - run:
          name: Setup
          command: make test_setup
      - run:
          name: Run small tests
          command: make run_small_tests_redhat8
          no_output_timeout: 20m
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

  test_redhat_8_large:
    executor: circleci_xlarge
    steps:
      - checkout
      - attach_workspace:
          at: workspace_cache
      - run:
          name: Setup python3
          command: |
            pyenv global 2.7.12 3.5.2
            python --version
            pip --version
            python3 --version
            pip3 --version
      - run:
          name: Load images
          command: |
            docker load -i workspace_cache/splunk-redhat-8.tar
            docker load -i workspace_cache/uf-redhat-8.tar
      - run:
          name: Setup
          command: make test_setup
      - run:
          name: Run large tests
          command: make run_large_tests_redhat8
          no_output_timeout: 1h
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

  test_debian_10_small:
    executor: circleci_medium
    steps:
      - checkout
      - attach_workspace:
          at: workspace_cache
      - run:
          name: Setup python3
          command: |
            pyenv global 2.7.12 3.5.2
            python --version
            pip --version
            python3 --version
            pip3 --version
      - run:
          name: Load images
          command: |
            docker load -i workspace_cache/splunk-debian-10.tar
            docker load -i workspace_cache/uf-debian-10.tar
      - run:
          name: Setup
          command: make test_setup
      - run:
          name: Check image size
          command: make test_debian10_image_size
      - run:
          name: Run small tests
          command: make run_small_tests_debian10
          no_output_timeout: 20m
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

  test_debian_10_large:
    executor: circleci_xlarge
    steps:
      - checkout
      - attach_workspace:
          at: workspace_cache
      - run:
          name: Setup python3
          command: |
            pyenv global 2.7.12 3.5.2
            python --version
            pip --version
            python3 --version
            pip3 --version
      - run:
          name: Load images
          command: |
            docker load -i workspace_cache/splunk-debian-10.tar
            docker load -i workspace_cache/uf-debian-10.tar
      - run:
          name: Setup
          command: make test_setup
      - run:
          name: Run large tests
          command: make run_large_tests_debian10
          no_output_timeout: 1h
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

workflows:
  version: 2
  pipeline:
    jobs:
      - build_debian_10
      - build_redhat_8
      - scan_images:
          requires:
            - build_debian_10
            - build_redhat_8
      - test_redhat_8_small:
          requires:
            - build_debian_10
            - build_redhat_8
      - test_redhat_8_large:
          requires:
            - build_debian_10
            - build_redhat_8
      - test_debian_10_small:
          requires:
            - build_debian_10
            - build_redhat_8
      - test_debian_10_large:
          requires:
            - build_debian_10
            - build_redhat_8
